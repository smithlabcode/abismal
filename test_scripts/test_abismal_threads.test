#!/usr/bin/env bash

f () {
    error_code=$? # save exit code first
    echo "error $error_code"
    echo "command with error:"
    echo "${BASH_COMMAND}"
    echo "on line ${BASH_LINENO[0]}"
    exit $error_code
}
trap f ERR

infile=tests/reads_1.fq
infileidx=tests/tRex1.idx
if [[ -e "${infile}" && -e "${infileidx}" ]]; then
    ./abismal map -v -B -t 2 -i ${infileidx} ${infile} > /dev/null;
else
    echo "missing input file(s); skipping test";
    exit 77;
fi

infile1=tests/reads_pe_1.fq
infile2=tests/reads_pe_2.fq
if [[ -e "${infile1}" && -e "${infile2}" ]]; then
    ./abismal map -v -B -t 2 -i ${infileidx} ${infile1} ${infile2} > /dev/null;
else
    echo "missing input file(s); skipping test";
    exit 77;
fi

infile1=tests/reads_pbat_pe_1.fq
infile2=tests/reads_pbat_pe_2.fq
if [[ -e "${infile1}" && -e "${infile2}" ]]; then
    ./abismal map -v -B -t 2 -P -i ${infileidx} ${infile1} ${infile2} > /dev/null;
else
    echo "missing input file(s); skipping tests";
    exit 77;
fi

infile1=tests/reads_rpbat_pe_1.fq
infile2=tests/reads_rpbat_pe_2.fq
if [[ -e "${infile1}" && -e "${infile2}" ]]; then
    ./abismal map -v -B -t 2 -P -i ${infileidx} ${infile1} ${infile2} > /dev/null;
else
    echo "missing input file(s); skipping test";
    exit 77;
fi
